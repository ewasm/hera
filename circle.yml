defaults:

  update-submodules: &update-submodules
    run:
      name: "Update git submodules"
      command: |
        git submodule update --init

  environment-info: &environment-info
    run:
      name: "Environment info"
      command: |
        echo CXX: $CXX
        echo Generator: $GENERATOR
        echo CMake options: $CMAKE_OPTIONS
        $CXX --version
        $CXX --version > compiler.version

  configure: &configure
    run:
      name: "Configure"
      # Build "out-of-source" to have better coverage report
      # (ninja is using relative paths otherwise).
      working_directory: ~/build
      command: |
        cmake ../project -G "$GENERATOR" -DCMAKE_BUILD_TYPE=$BUILD_TYPE $CMAKE_OPTIONS

#  configure-eth: &configure-eth
#    run:
#      name: "Configure Client"
#      working_directory: ~/cpp-ethereum/build
#      command: |
#        rm -rf ../hera
#        ln -s ../.. hera
#        cmake -DHERA=ON ..

  build: &build
    run:
      name: "Build"
      working_directory: ~/build
      command: cmake --build . -- -j $BUILD_PARALLEL_JOBS

#  build-eth: &build-eth
#    run:
#      name: "Build client"
#      working_directory: ~/cpp-ethereum/build
#      command: cmake --build . -- -j $BUILD_PARALLEL_JOBS

  save-deps-cache: &save-deps-cache
    save_cache:
      name: "Save dependencies cache"
      key: &deps-cache-key deps-4-{{arch}}-{{checksum "compiler.version"}}-{{checksum "cmake/ProjectBinaryen.cmake"}}
      paths:
        - ~/build/deps

  save-eth-cache: &save-eth-cache
    save_cache:
      name: "Save client dependency cache"
      key: &eth-cache-key deps-4-{{arch}}-{{checksum "compiler.version"}}-cpp-ethereum
      paths:
        - ~/cpp-ethereum/build

  restore-deps-cache: &restore-deps-cache
    restore_cache:
      name: "Restore dependencies cache"
      key: *deps-cache-key

  restore-eth-cache: &restore-eth-cache
    restore_cache:
      name: "Restore client dependency cache"
      key: *eth-cache-key

#  ewasm-tests: &ewasm-tests
#    run:
#      name: "Run ewasm tests"
#      working_directory: ~/cpp-ethereum/build
#      command: |
#        git clone --recursive https://github.com/ewasm/tests -b wasm-tests
#        ./test/testeth -t GeneralStateTests/stEWASMTests -- --testpath ./tests --vm hera --singlenet "Byzantium"

  linux-steps: &linux-steps
    - checkout
    - *update-submodules
    - *environment-info
    - *restore-deps-cache
    - *configure
    - *build
    - *save-deps-cache

#  cpp-ethereum-steps: &cpp-ethereum-steps
#    - *restore-eth-cache
#    - *configure-eth
#    - *build-eth
#    - *save-eth-cache

  test-steps: &test-steps
    - *linux-steps
    - *restore-eth-cache


version: 2
jobs:

  test:
    environment:
      - BUILD_TYPE: Release
      - CXX: clang++-5.0
      - CC: clang-5.0
      - GENERATOR: Ninja
      - BUILD_PARALLEL_JOBS: 4
      - CMAKE_OPTIONS: -DHERA_DEBUGGING=OFF
    docker:
      - image: ethereum/cpp-build-env
    steps: *test-steps

  Linux-Clang5:
    environment:
      - BUILD_TYPE: Release
      - CXX: clang++-5.0
      - CC:  clang-5.0
      - GENERATOR: Ninja
      - BUILD_PARALLEL_JOBS: 4
      - CMAKE_OPTIONS: -DHERA_DEBUGGING=OFF
    docker:
      - image: ethereum/cpp-build-env
    steps: *linux-steps

  Linux-GCC6-Debug:
    environment:
      - BUILD_TYPE: Debug
      - CXX: g++-6
      - CC:  gcc-6
      - GENERATOR: Unix Makefiles
      - BUILD_PARALLEL_JOBS: 4
      - CMAKE_OPTIONS: -DHERA_DEBUGGING=ON
    docker:
      - image: ethereum/cpp-build-env
    steps: *linux-steps

workflows:
  version: 2
  cpp-ethereum:
    jobs:
      - Linux-Clang5
      - Linux-GCC6-Debug
      - test
